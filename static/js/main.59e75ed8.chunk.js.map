{"version":3,"sources":["logo.svg","components/Wrapper/index.js","components/FriendCard/index.js","components/Navbar/index.js","components/Jumbotron/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Wrapper","props","react_default","a","createElement","className","children","FriendCard","onClick","clickedCharacter","id","alt","name","src","image","Navbar","href","message","score","highScore","Jumbotron","App","state","friends","clickedArray","shuffledArray","_this","shuffleArray","setState","includes","concat","imagesArray","i","length","j","Math","floor","random","_ref","_this2","this","components_Navbar","logo","components_Jumbotron","components_Wrapper","map","friend","components_FriendCard","key","occupation","location","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"o5FAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qRCOzBC,MAJf,SAAiBC,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMK,yCCS1BC,MAVf,SAAoBN,GAClB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACVG,QAAU,kBAAMP,EAAMQ,iBAAiBR,EAAMS,MAEhDR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBM,IAAKV,EAAMW,KAAMC,IAAKZ,EAAMa,iBCMtDC,MAXf,SAAgBd,GACd,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACRH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeW,KAAK,+CAAjC,0BACAd,EAAAC,EAAAC,cAAA,UAAKH,EAAMgB,SACXf,EAAAC,EAAAC,cAAA,yBAAiBH,EAAMiB,OACvBhB,EAAAC,EAAAC,cAAA,yBAAiBH,EAAMkB,mBCMlBC,MAZf,WACA,OACIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,0BACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,sMCiFWgB,6MA7EbC,MAAQ,CACNC,UACAL,MAAM,EACNC,UAAU,EACVK,aAAa,GACbP,QAAS,MAQXR,iBAAmB,SAAAC,GAEf,IAAMe,EAAgBC,EAAKC,aAAaJ,GACxCG,EAAKE,SAAS,CAACL,QAASE,IAEpBC,EAAKJ,MAAME,aAAaK,SAASnB,GACnCgB,EAAKE,SAAS,CAAEV,MAAO,EAAGM,aAAc,GAAIP,QAAS,yBAGrDS,EAAKE,SAAS,CACZJ,aAAcE,EAAKJ,MAAME,aAAaM,OAAO,CAACpB,IAC9CQ,MAAOQ,EAAKJ,MAAMJ,MAAQ,EAC1BD,QAAS,YAITS,EAAKJ,MAAMJ,MAAQQ,EAAKJ,MAAMH,WAChCO,EAAKE,SAAS,CAAET,UAAWO,EAAKJ,MAAMJ,WAI5CS,aAAe,SAACI,GACd,IAAK,IAAIC,EAAID,EAAYE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC7C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADGM,EAEV,CAACP,EAAYG,GAAIH,EAAYC,IAA/DD,EAAYC,GAFgCM,EAAA,GAE5BP,EAAYG,GAFgBI,EAAA,GAIjD,OAAOP,2EAKD,IAAAQ,EAAAC,KACN,OACEtC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqC,EAAD,CAAQxB,QAASuB,KAAKlB,MAAML,QAASE,UAAWqB,KAAKlB,MAAMH,UAAWD,MAAOsB,KAAKlB,MAAMJ,QACxFhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKS,IAAK6B,IAAMrC,UAAU,WAAWM,IAAI,WAG7CT,EAAAC,EAAAC,cAACuC,EAAD,MAEAzC,EAAAC,EAAAC,cAACwC,EAAD,KAEIrB,EAAQsB,IAAI,SAAAC,GACV,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,CACLrC,GAAIoC,EAAOpC,GACXsC,IAAKF,EAAOpC,GACZE,KAAMkC,EAAOlC,KACbE,MAAOgC,EAAOhC,MACdmC,WAAYH,EAAOG,WACnBC,SAAUJ,EAAOI,SACjBzC,iBAAkB8B,EAAK9B,8BApErB0C,IAAMC,iBCJxBC,IAASC,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.59e75ed8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n      <div className=\"img-container\"\n           onClick={ () => props.clickedCharacter(props.id)}\n      >\n        <img className=\"image-thumbnail\" alt={props.name} src={props.image} />\n      </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\"\n\n\nfunction Navbar(props){\n  return( \n   <nav className=\"navbar navbar-dark bg-primary sticky-top\">\n          <a className=\"navbar-brand\" href=\"https://ericjosprice.github.io/Clicky-Game/\">Family Guy Memory Game</a>\n          <h3>{props.message}</h3>\n          <h3>Your Score: {props.score}</h3>\n          <h3>High Score: {props.highScore}</h3>\n\n  </nav>)\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron (){\nreturn (\n    <div className=\"jumbotron jumbotron-fluid mb-0\">\n  <div className=\"container\">\n    <h1 className=\"display-4\">Family Guy Memory Game</h1>\n    <p className=\"lead\">Character cards will randomly change position whenever clicked. Click each card only once. Remember the cards that have already been clicked. If you click a card more than once then you lose.</p>\n  </div>\n</div>\n);\n\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport \"./App.css\";\nimport logo from \"./logo.svg\";\nimport FriendCard from \"./components/FriendCard\";\nimport friends from \"./friends.json\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\"\n\nclass App extends React.Component {\n\n  //We need a \"clickedArray\" in the state, so we can track the id's of the cards that have been clicked\n  state = {\n    friends,\n    score:0,\n    highScore:0,\n    clickedArray:[],\n    message: \"\"\n  };\n// when a character card is clicked\n  // 1. shuffle friends Array indeces then set the friends array state \n  // 2. determine if the card's id has already been clicked\n    // a. if it has been clicked then game over\n    // b. if it hasn't been clicked then increment score\n    // c. determine if high score has been reached. if so set highScore state  \n  clickedCharacter = id => {\n    //shuffle friends array\n      const shuffledArray = this.shuffleArray(friends);\n      this.setState({friends: shuffledArray});\n      // reset game if image was already clicked.  Set this.state.score = 0; empty clickeadArray, end of game if card's id exists in clicked array\n      if (this.state.clickedArray.includes(id)) {\n        this.setState({ score: 0, clickedArray: [], message: \"Game Over try again!\"});\n      }\n      else {\n        this.setState({\n          clickedArray: this.state.clickedArray.concat([id]),\n          score: this.state.score + 1,\n          message: \"Correct\"\n        });\n      }\n      // if score>highScore, set highScore = score\n      if (this.state.score > this.state.highScore) {\n        this.setState({ highScore: this.state.score });\n      }\n  }\n// randomly shuffle array indeces \n  shuffleArray = (imagesArray) => {\n    for (let i = imagesArray.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [imagesArray[i], imagesArray[j]] = [imagesArray[j], imagesArray[i]];\n    }\n    return imagesArray;\n}\n\n\n  \n  render(){\n    return (\n      <div>\n        <Navbar message={this.state.message} highScore={this.state.highScore} score={this.state.score}/>\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          </div>\n        </div>\n        <Jumbotron/>\n\n        <Wrapper>\n          {\n            friends.map(friend => {\n              return <FriendCard\n                id={friend.id}\n                key={friend.id}\n                name={friend.name}\n                image={friend.image}\n                occupation={friend.occupation}\n                location={friend.location}\n                clickedCharacter={this.clickedCharacter}\n              />\n            })\n\n          }\n        \n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}